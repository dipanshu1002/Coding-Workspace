package DSU;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class DSUMe {
	public static void main(String[] args) {
		FastReader s = new FastReader();
		int n = s.nextInt();
		int e = s.nextInt();
		DSU dsu = new DSU(n);
		for(int i=0;i<e;i++) {
			int v1 = s.nextInt();
			int v2 = s.nextInt();
			dsu.union(v1,v2);
		}
		int q = s.nextInt();
		for(int i=0;i<q;i++) {
			int t = s.nextInt();
			System.out.println(dsu.size(t));
		}
		
	}
	
	/*
	 *          0
	 *         / \
	 *        3   4      ,  5-9 ,  10
	 *       /   / \
	 *      1   6   7
	 *         /     \
	 *        8       2
	 */
	static class FastReader 
	
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 
	
}
