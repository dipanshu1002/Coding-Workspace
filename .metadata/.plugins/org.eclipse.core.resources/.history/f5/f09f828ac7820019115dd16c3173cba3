package MayCircuits;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.*;

public class Capitals_Cities {
	static class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 
    static class Pair{
    	int ind;
    	int sum;
    }
	public static Pair totalSum(int l, int r,int[] arr,int ans,int K,int N, int mod,int sum) {
		Pair p = new Pair();
		if(l>r) {
			p.ind = ans;
			p.sum = Math.abs(sum-K);
			return p;
		}
		else {
		int  mid = l+(r-l)/2;
		int sum=0;
		for(int i=0;i<N;i++) {
			sum+=Math.abs(arr[mid]-arr[i]);
		}
		if(sum<K && (K-sum)%2<=mod) {
			
			return totalSum(l,mid-1,arr,mid,K,N,(K-sum)%2,sum);
		}else if(sum>K) {
			if(sum-K==mod) {
				p.ind=mid;
				p.sum=mod;
				return p;
			}
			else {
				return totalSum(mid+1,r,arr,ans,K,N,mod,sum);
			}
		}else {
		return p;
		}
		}
	}
	
	public static void main(String[] args) {
		FastReader s = new FastReader();
		int N = s.nextInt();
		int K = s.nextInt();
		int[] arr = new int[N];
		HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
		for(int i=0;i<N;i++) {
			arr[i]=s.nextInt();
			map.put(arr[i],i);
		}
		Arrays.sort(arr);
		int midI = 0 + (N-1)/2;
		int mid = arr[(N-1)/2];
		int sum=0;
		for(int i=0;i<N;i++) {
			sum+=Math.abs(arr[mid]-arr[i]);
		}
		
		int ans=midI;
		int index = midI;
		if(sum>K) {
			ans = sum-K;
			System.out.println(index+" "+ans);
			
		}else{
			Pair p = new Pair();
			p= totalSum(0,N-1,arr,ans,K,N,(K-sum)%2,sum);
			int mod = (K-sum)%2;
			System.out.println(p.ind+" "+p.sum);
				
			}
		}
		
	}
	

