package Round583;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class typeD {
	public static void main(String[] args) {
		FastReader s = new FastReader();
		int n  = s.nextInt();
		int m = s.nextInt();
		char[][] arr = new char[n][m];
		for(int i=0;i<n;i++) {
			String str = s.nextLine();
			for(int j=0;j<m;j++) {
			arr[i][j]=str.charAt(j);
			}
		}
		for(int i=0;i<n;i++) {
			for(int j=0;j<m;j++) {
				System.out.println(arr[i][j]+" ");
			}
			System.out.println();
		}
		int[][]dp = new int[n+1][m+1];
		for(int i=0;i<=m;i++) {
			dp[0][i]=1;
		}
		for(int i=0;i<=n;i++) {
			dp[i][0]=1;
		}
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=n;j++) {
				if(arr[i-1][j-1]=='#') {
					dp[i][j]=0;
				}
				if(dp[i][j-1]==1||dp[i-1][j]==1) {
					dp[i][j]=1;
				}else {
					dp[i][j]=0;
				}
			}
		}
	}
	static class FastReader 
	
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 
	
}
