package October19;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
import java.util.*;
public class MARM {
	static class Pair{
		long a;
		long b;
		long xor;
		Pair(long a, long b){
			this.a = a;
			this.b = b;
			this.xor = a^b;
		}
	}
	public static void main(String[] args) {
		FastReader s = new FastReader();
		int T = s.nextInt();
		for(int t=0;t<T;t++) {
			int N = s.nextInt();
			long K = s.nextLong();
			long[] arr = new long[N];
			for(int i=0;i<N;i++)arr[i]=s.nextLong();
			long[] cnt = new long[N];
			long init = K/N;
			if(K>=N)for(int i=0;i<N;i++)cnt[i]=init;
			long init2 = K%N;
			for(int i=0;i<init2;i++)cnt[i]+=1;
			int st = 0;
			int e = N-1;
			System.out.println(Arrays.toString(cnt));
			while(st<e) {
				Pair p = new Pair(arr[st],arr[e]);
				if(cnt[st]%3==0)arr[st]=p.a;
				else if(cnt[st]%3==1)arr[st]=p.xor;
				else if(cnt[st]%3==2)arr[st]=p.b;
				
				if(cnt[e]%3==0)arr[st]=p.b;
				else if(cnt[e]%3==1)arr[st]=p.a;
				else if(cnt[e]%3==2)arr[st]=p.xor;
				st++;
				e--;
				
			}
			System.out.println(Arrays.toString(arr));
			
		}
		
	}
	static class FastReader 
	
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 

}
