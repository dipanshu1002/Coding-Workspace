package Round579;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class typeD1 {
	static class FastReader 
	
    { 
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    } 
	
	public static boolean cal(String str1, String str2, long n, long m){
		int j =0;
		for(int i=0;i<n&&j<m;i++) {
			if(str1.charAt(j)==str2.charAt(i)) {
				j++;
			}
		}
		return (j==m);
	}
	public static void main(String[] args) {
		FastReader s = new FastReader();
		String str1 = s.nextLine();
		String str2 = s.nextLine();
		long n = str1.length();
		long m = str2.length();
		long ans = 0;
		for(int i=0;i<n;i++) {
			for(int j=i;j<n;j++) {
				String s11 = str1.substring(0,i);
				String s12 = str1.substring(j+1);
				String s13 = s11+s12;
				System.out.println(s13);
				if(cal(str2,s13,m,(n-(j-i+1)))) {
					ans = Math.max(ans,(long)(j-i+1));
				}
			}
		}
		System.out.println(ans);
	}
}
